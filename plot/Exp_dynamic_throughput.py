import numpy as np
import matplotlib.pyplot as plt

plt.rc('font', family='Arial')
# 输入的以空格分隔的字符串
input_string = "2.38397 2.44159 2.4068 2.4353 2.4361 2.42426 2.43613 2.43744 2.44373 2.439 2.33572 2.44097 2.44282 2.4156 2.43647 2.42201 2.44516 2.43158 2.38126 2.42594 2.41996 2.43738 2.43204 2.44103 2.4309 2.42569 2.44112 2.44553 2.3796 2.43857 2.42838 2.43903 2.43689 2.44086 2.44391 2.42206 2.43215 2.26637 2.3604 2.43859 2.39445 2.42857 2.39941 2.43342 2.42998 2.41328 2.42741 2.44331 2.43212 2.44572 2.37743 2.36045 2.4115 2.4242 2.3629 2.35061 2.4205 2.43503 2.41805 2.43656 2.43509 2.39196 2.41682 2.42407 2.42727 2.41256 2.42791 2.42616 2.41696 2.42022 2.41381 2.40036 2.44235 2.43221 2.43675 2.41875 2.44173 2.43608 2.27757 2.10504 2.10532 2.10595 2.08075 2.10721 2.1032 2.10571 2.11105 2.10729 2.10197 2.11283 2.10503 2.11713 2.10602 2.10549 2.10718 2.10967 2.10761 2.10654 2.10377 2.11315 2.1052 2.10481 2.1085 2.10636 2.15869 2.41772 2.44196 2.43536 2.43705 2.41965 2.39374 2.43718 2.42325 2.42097 2.42745 2.41395 2.44177 2.42929 2.41029 2.40464 2.44017 2.43249 2.36458 2.34525 2.41386 2.38847 2.41132 2.43669 2.43929 2.42887 2.41243 2.4301 2.41515 2.43139 2.43084 2.38716 2.42941 2.43366 2.36884 2.2371 2.40707 2.41518 2.42027 2.40675 2.43802 2.4171 2.42457 2.43185 2.43536 2.44007 2.38714 2.43283 2.43963 2.43068 2.41303 2.35951 2.43818 2.43377 2.41954 2.37174 2.39161 2.41214 2.39719 2.30767 2.40842 2.39421 2.42043 2.43296 2.38524 2.40938 2.41117 2.43656 2.43328 2.32485 2.42653 2.39284 2.43348 2.3448 2.42325 2.41598 2.42684 2.41871 2.38637 2.38979 2.42815 2.40678 2.44305 2.44525 2.43512 2.43553 2.41604 2.43771 2.44041 2.41929 2.40213 2.40731 2.43345 2.44074 2.43172 2.41879 2.38978 2.43399 2.41957 2.4336 2.42312 1.14151 1.12042 1.11972 1.11959 1.1205 1.12088 1.12275 1.12106 1.11926 1.11986 1.12108 1.11915 1.10356 1.11893 1.12029 1.11698 1.12095 1.11424 1.12329 1.11612 1.12086 1.12232 1.12421 1.12239 1.12215 1.1222 2.25927 2.27332 2.28958 2.28832 2.27387 2.29672 2.30374 2.29352 2.26491 2.17599 2.26218 2.25233 2.2906 2.28848 2.2567 2.29815 2.30295 2.26668 2.29028 2.2476 2.27127 2.29145 2.29468 2.28749 2.19318 2.26102 2.29562 2.29648 2.30206 2.246 2.2719 2.27237 2.28114 2.29905 2.25737 2.28991 2.27997 2.29871 2.26734 2.29272 2.2974 2.30168 2.27939 2.29411 2.26254 2.29348 2.27604 2.30322 2.30183 2.26427 2.27023 2.27336 2.29454 2.29788 2.25673 2.26355 2.28815 2.24087 2.29514 2.29365 2.27417 2.29496 2.28814 2.28043 2.26919 2.26575 2.29692 2.28642 2.29761 2.25644 2.27548 2.2321 2.29083 2.29813 2.27631 2.27502 2.29191 2.29669 2.29913 2.25489 2.29111 2.3047 2.29278 2.26918 2.27496 2.23384 2.27371 2.26353 2.23568 2.28107 2.26475 2.26002 2.29015 2.28138 2.27217 2.29162 2.27549 2.24473 2.26907 2.27672 2.26446 2.20789 2.27573 2.25919 2.25631 2.2785 2.27374 2.27706 2.2857 2.25425 2.17657 2.2093 2.27004 2.25317 2.06915 2.27619 2.18709"
# 将输入字符串解析成浮点数数组
speeds = [float(speed) for speed in input_string.split()]

# 创建时间数组，间隔为0.1s
time = [i * 0.1 for i in range(len(speeds))]

custom_xticks1 = [15 * i for i in range(len(speeds)//100)]  # 刻度位置
custom_xtick_labels1 = [15*i for i in range(len(speeds)//100)]  # 刻度标签

custom_xticks2 = []
custom_xtick_labels2 = []
for i in range(1, len(speeds)-100):
    if abs(speeds[i]-speeds[i-1]) >= 0.17 :
        custom_xticks2.append(time[i-1])
        custom_xtick_labels2.append("$t_{}$".format(len(custom_xticks2)))

plt.figure(figsize=(7.5,4.5))
plt.yscale('linear')
plt.ylim(0, 3.0)
# plt.xticks(np.arange(0.9, 1.21, 0.05))

plt.tick_params(labelsize=19)
ax1 = plt.gca()
# 创建折线图
plt.plot(time, speeds, linestyle='-')


# 绘制柱状图
plt.plot(time, speeds, linestyle='-', linewidth=2.5, color='#2e75b6', alpha=1)

plt.xlabel('Time(s)', fontweight='bold', fontsize=20)
plt.ylabel('Throughput(Mpps)', fontweight='bold', fontsize=20)

# 设置图例
# plt.legend(loc='lower left', ncol=1, handlelength=3)
# leg = plt.gca().get_legend()
# ltext = leg.get_texts()
# plt.setp(ltext, fontweight='bold', fontsize=20)
plt.xticks(custom_xticks1+custom_xticks2, custom_xtick_labels1+custom_xtick_labels2)
for tick in ax1.xaxis.get_major_ticks():
    if tick.label.get_text() in custom_xtick_labels2:
        tick.label.set_color('red')
        tick.label.set_fontsize(17)

# 设置网格
# ax1.grid(True, linestyle='--', axis='x')
ax1.grid(True, linestyle='--', axis='y')
for i in range(len(custom_xticks2)):
    ax1.axvline(x=custom_xticks2[i], color='r', linestyle='--', label=custom_xtick_labels2[i], linewidth=1.5)
plt.tight_layout()


# 保存图像
plt.savefig('./ExpFigures/dynamic_throughput.pdf')
plt.show()
